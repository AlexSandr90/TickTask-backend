import { Controller, Get, Patch, Delete, Param, Body, Post, BadRequestException, UseGuards } from '@nestjs/common';
import { UsersService } from './users.service';
import { UpdateUserDto } from './dto/user.dto';
import { AuthGuard } from '../../guards/auth.guard';



@Controller('users')

export class UsersController {
  constructor(private readonly usersService: UsersService) {}

  @Get(':id')
  @UseGuards(AuthGuard)
  async getUserById(@Param('id') id: string) {
    return this.usersService.findOne(id);
  }

  @Patch(':id')
  @UseGuards(AuthGuard)
  async updateUser(@Param('id') id: string, @Body() userData: UpdateUserDto) {
    return this.usersService.update(id, userData);
  }

  @Delete(':id')
  @UseGuards(AuthGuard)
  async deleteUser(@Param('id') id: string) {
    return this.usersService.remove(id);
  }
  @Post('send-magic-link')
  async sendMagicLink(@Body('email') email: string) {
    return this.usersService.sendMagicLink(email);
  }

  // –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  @Get('activate/:token')
  async activateUser(@Param('token') token: string) {
    // –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –ø–æ—Å—Ç—É–ø–∏–ª –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
    console.log('üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ:', token);

    try {
      // –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      return await this.usersService.activateUserByToken(token);
    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –µ—ë –¥–∞–ª—å—à–µ
      console.error('‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
      throw new BadRequestException('–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
  }
}
