import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { IsInt, IsOptional, Min, IsDate, IsString, ValidateNested } from 'class-validator';
import { Type, Transform } from 'class-transformer';

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
class MotivationalMessageDto {
  @ApiProperty({ example: 'üöÄ', description: '–≠–º–æ–¥–∑–∏ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è' })
  @IsString()
  emoji: string;

  @ApiProperty({ example: '–ù–∞–±–∏—Ä–∞–µ—Ç–µ –æ–±–æ—Ä–æ—Ç—ã!', description: '–¢–µ–∫—Å—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è' })
  @IsString()
  text: string;
}

class TimeBreakdownDto {
  @ApiProperty({ example: 0, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç' })
  @IsInt()
  @Min(0)
  years: number;

  @ApiProperty({ example: 2, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤' })
  @IsInt()
  @Min(0)
  months: number;

  @ApiProperty({ example: 15, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π' })
  @IsInt()
  @Min(0)
  days: number;

  @ApiProperty({ example: 8, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤' })
  @IsInt()
  @Min(0)
  hours: number;

  @ApiProperty({ example: 30, description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç' })
  @IsInt()
  @Min(0)
  minutes: number;
}

export class UserActivityDto {
  @ApiProperty({
    example: 360,
    description: '–û–±—â–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö',
    type: 'string' // –£–∫–∞–∑—ã–≤–∞–µ–º string –¥–ª—è Swagger, —Ç–∞–∫ –∫–∞–∫ BigInt —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫—É
  })
  @Transform(({ value }) => typeof value === 'bigint' ? Number(value) : value)
  totalTimeSpent: number; // –í JavaScript –±—É–¥–µ—Ç number, –Ω–æ –≤ –±–∞–∑–µ BigInt

  @ApiProperty({
    example: '6 –º–∏–Ω—É—Ç',
    description: '–û–±—â–µ–µ –≤—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ',
  })
  @IsString()
  totalTimeSpentFormatted: string;

  @ApiProperty({ example: 5, description: '–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π –æ–Ω–ª–∞–π–Ω' })
  @IsInt()
  @Min(0)
  currentStreak: number;

  @ApiProperty({ example: 10, description: '–†–µ–∫–æ—Ä–¥–Ω–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π –æ–Ω–ª–∞–π–Ω' })
  @IsInt()
  @Min(0)
  longestStreak: number;

  @ApiPropertyOptional({
    example: new Date(),
    description: '–ü–æ—Å–ª–µ–¥–Ω–∏–π heartbeat –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
  })
  @IsOptional()
  @IsDate()
  lastHeartbeat?: Date;

  // ===== –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ —Ä–∞–∑–±–∏–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ =====

  @ApiProperty({
    description: '–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
    type: MotivationalMessageDto,
    example: {
      emoji: 'üöÄ',
      text: '–ù–∞–±–∏—Ä–∞–µ—Ç–µ –æ–±–æ—Ä–æ—Ç—ã!'
    }
  })
  @ValidateNested()
  @Type(() => MotivationalMessageDto)
  motivationalMessage: MotivationalMessageDto;

  @ApiProperty({
    description: '–†–∞–∑–±–∏–≤–∫–∞ –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≥–æ–¥—ã, –º–µ—Å—è—Ü—ã, –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã',
    type: TimeBreakdownDto,
    example: {
      years: 0,
      months: 2,
      days: 15,
      hours: 8,
      minutes: 30
    }
  })
  @ValidateNested()
  @Type(() => TimeBreakdownDto)
  timeBreakdown: TimeBreakdownDto;

  @ApiProperty({
    example: 125,
    description: '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)'
  })
  @IsInt()
  @Min(0)
  totalHours: number;

  @ApiProperty({
    example: 7530,
    description: '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)'
  })
  @IsInt()
  @Min(0)
  totalMinutes: number;
}