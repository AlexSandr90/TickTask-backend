generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  username           String
  email              String    @unique
  passwordHash       String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  lastLogin          DateTime?
  theme              String    @default("light")
  notifications      Boolean   @default(true)
  refreshToken       String?
  isActive           Boolean   @default(false)
  googleId           String?   @unique
  passwordResetToken String?
  avatarPath         String?
  timezone           String    @default("UTC")
  boards             Board[]
}

model Board {
  id          String   @id @unique @default(uuid())
  title       String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  columns     Column[]
  position    Int      @default(0) // Добавляем позицию
}

model Column {
  id        String   @id @unique @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boardId   String
  position  Int      @default(0)
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@unique([boardId, position])
}

model Task {
  id          String   @id @unique @default(uuid())
  title       String
  description String?
  columnId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  position    Int      @default(0)
  column      Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)

  @@unique([columnId, position])
}
